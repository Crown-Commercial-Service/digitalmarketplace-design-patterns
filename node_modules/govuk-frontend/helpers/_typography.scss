////
/// @group helpers
////

/// 'Common typography' helper
///
/// Sets the font family and associated properties, such as font smoothing. Also
/// overrides the font for print.
///
/// @param {List} $font-family [$govuk-font-family] Font family to use
/// @access public

@mixin govuk-typography-common($font-family: $govuk-font-family) {
  font-family: $font-family;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  // If using NTA, include the font-face definition
  @if ($govuk-font-family == $govuk-font-family-nta) {
    @include _govuk-font-face-nta;
  }

  @include govuk-media-query($media-type: print) {
    font-family: $govuk-font-family-print;
  }
}

/// Text colour helper
///
/// Sets the text colour, including a suitable override for print.
///
/// @access public

@mixin govuk-text-colour {
  color: $govuk-text-colour;

  @include govuk-media-query($media-type: print) {
    color: $govuk-print-text-colour;
  }
}

/// Regular font weight helper
///
/// @param {Boolean} $important [false] - Whether to mark declarations as
///   `!important`. Generally Used to create override classes.
/// @access public

@mixin govuk-typography-weight-regular($important: false) {
  font-weight: $govuk-font-weight-regular iff($important, !important);
}

/// Bold font weight helper
///
/// @param {Boolean} $important [false] - Whether to mark declarations as
///   `!important`. Generally Used to create override classes.
/// @access public

@mixin govuk-typography-weight-bold($important: false) {
  font-weight: $govuk-font-weight-bold iff($important, !important);
}

/// Responsive typography helper
///
/// Takes a 'font map' as an argument and uses it to create font-size and
/// line-height declarations for different breakpoints, and for print.
///
/// Example font map:
///
/// $my-font-map: (
///   null: (
///     font-size: 16px,
///     line-height: 20px
///   ),
///   tablet: (
///     font-size: 19px,
///     line-height: 25px
///   ),
///   print: (
///     font-size: 14pt,
///     line-height: 1.15
///   )
/// );
///
/// @param {Map} $font-map - Font map
/// @param {Number} $override-line-height [false] - Non responsive custom line
///   height. Omit to use the line height from the font map.
/// @param {Boolean} $important [false] - Whether to mark declarations as
///   `!important`.
///
/// @access public

@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {

  @if not map-has-key($govuk-typography-scale, $size) {
    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";
  }

  $font-map: map-get($govuk-typography-scale, $size);

  @each $breakpoint, $breakpoint-map in $font-map {
    $font-size: map-get($breakpoint-map, "font-size") iff($important, !important);
    $line-height: map-get($breakpoint-map, "line-height") iff($important, !important);

    // Sometimes we need to use a custom non-responsive line height for
    // a component.
    @if $override-line-height {
      $line-height: $override-line-height iff($important, !important);
    }

    @if $breakpoint == null {
      font-size: $font-size;
      line-height: $line-height;
    } @elseif $breakpoint == "print" {
      @include govuk-media-query($media-type: print) {
        font-size: $font-size;
        line-height: $line-height;
      }
    } @else {
      @include govuk-media-query($from: $breakpoint) {
        font-size: $font-size;
        line-height: $line-height;
      }
    }
  }
}

/// Font helper
///
/// @param {Number} $size - Size of the font as it would appear on desktop -
///   uses the responsive font size map
/// @param {String} $weight [regular] - Weight: `bold` or `regular`
/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not
/// @param {Number} $line-height [false] - Line-height, if overriding the default
///
/// @access public

@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {
  @if $tabular {
    @include govuk-typography-common($font-family: $govuk-font-family-tabular);
  } @else {
    @include govuk-typography-common;
  }

  @if $weight == regular {
    @include govuk-typography-weight-regular;
  } @else if $weight == bold {
    @include govuk-typography-weight-bold;
  }

  @if $size {
    @include govuk-typography-responsive($size, $override-line-height: $line-height);
  }
}
